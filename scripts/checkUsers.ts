import pool from "../db";

async function checkUsers() {
  try {
    console.log("Checking user status...\n");

    // Get all users
    const allUsers = await pool.query(
      `SELECT username, role, is_active, date_of_creation FROM users ORDER BY username`
    );

    console.log("üìã All Users in Database:");
    console.log("‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê");
    console.log("‚îÇ Username ‚îÇ Role    ‚îÇ Active   ‚îÇ Created             ‚îÇ");
    console.log("‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§");
    
    allUsers.rows.forEach((user: any) => {
      const status = user.is_active ? "‚úÖ Yes" : "‚ùå No";
      const created = new Date(user.date_of_creation).toLocaleDateString();
      console.log(`‚îÇ ${user.username.padEnd(8)} ‚îÇ ${user.role.padEnd(7)} ‚îÇ ${status.padEnd(8)} ‚îÇ ${created.padEnd(19)} ‚îÇ`);
    });
    
    console.log("‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò");

    const activeCount = allUsers.rows.filter((user: any) => user.is_active).length;
    const totalCount = allUsers.rows.length;

    console.log(`\nüìä Summary:`);
    console.log(`   Total users: ${totalCount}`);
    console.log(`   Active users: ${activeCount}`);
    console.log(`   Inactive users: ${totalCount - activeCount}`);

    // Expected counts for new user structure
    const expectedCounts = {
      admin: 3,
      developer: 2,
      support: 2,
      salesperson: 6,
      salesmanager: 2,
      InventoryStaff: 2
    };

    const expectedTotal = Object.values(expectedCounts).reduce((sum, count) => sum + count, 0);

    if (activeCount === expectedTotal) {
      console.log(`\n‚úÖ System has ${activeCount} active users as expected!`);

      // Show breakdown by role
      console.log("\nüìà Active Users by Role:");
      const roleCounts: Record<string, number> = {};
      allUsers.rows.filter((user: any) => user.is_active).forEach((user: any) => {
        roleCounts[user.role] = (roleCounts[user.role] || 0) + 1;
      });

      for (const [role, count] of Object.entries(roleCounts)) {
        const expected = expectedCounts[role as keyof typeof expectedCounts] || 0;
        const status = count === expected ? "‚úÖ" : "‚ö†Ô∏è";
        console.log(`   ${role}: ${count}/${expected} ${status}`);
      }
    } else {
      console.log(`\n‚ö†Ô∏è  System has ${activeCount} active users (expected ${expectedTotal})`);
    }

  } catch (error) {
    console.error("‚ùå Error checking users:", error);
  } finally {
    process.exit(0);
  }
}

checkUsers(); 